#+TITLE: Информационная безопасность систем и технологий
#+AUTHOR: Максим Захаров
#+LaTeX_CLASS: ncc

* Протокол IP
  CLOCK: [2010-09-08 Срд 10:03]--[2010-09-08 Срд 11:23] =>  1:20
Протокол сетевого уровня, обеспечивает передачу дейтаграмм между компьютерами, разбиение их на фрагменты и её маршрутизацию.

Протокол IP не гарантирует надёжную доставку дейтаграмм, он не управляет потоком данных и не выявляет ошибки передачи. Оптимизация маршрута проводится только для соседних узлов.

Максимальный размер пакета равен 2^16 байт.

Связь по протоколу поддерживается без установления соединения.

Протокол IP использует 32-разрядные адреса компьютера в версии 4. В версии 6 используются 128-разрядные адреса.

** Заголовок протокола IP
Длина заголовка равна 5 или 6 32-разрядных слов.

Поля:

1) /Версия/. В нём содержится версия протокола IP. Это поле указывает программе-получателю как декодировать все остальные поля заголовка, т. к в разных версиях поля отличаются. Если программа не работает с указанной версией протокола, то дейтаграмма отбрасывается.

2) /Длина заголовка/. В нём хранится длина заголовка. Размер поля 4 бита. В нём написано либо число 5, либо 6.

3) /Тип обслуживания/. Длина 8 бит. Первые 3 бита обозначают приоритет дейтаграммы. Если он равен 0 --- обычная, все 1 --- сетевое управление. 1 бит --- задержка, следующий --- пропускная способность, далее --- надёжность.

4) /Длина дейтаграммы/. Длина поля 16 бит.

5) /Идентификатор/. Длина 16 бит. В нём содержится уникальный идентификатор, присвоенный дейтаграмме передающим узлом. Идентификатор получают от протоколов вышестоящего уровня. Он используется для правильной сборки сообщений при фрагментации.

6) /Флаги/. 3 бита. 1 бит не используется, 2 бит --- флаг не фрагментировать, 3 бит --- есть ещё фрагменты.

7) /Смещение фрагмента/. Номер фрагмента в сообщении. Его длина 13 бит. Смещение указывается в единицах, кратных 8 байтам.

8) /Время жизни/. Длина 8 бит. Время в секундах, которое отводится на доставку дейтаграммы. Обычно 15-30 секунд. Если время жизни истекло, дейтаграмма уничтожается. Каждый узел, в который попадает дейтаграмма, уменьшает время жизни на 1 или больше.

9) /Протокол/. Длина 8 бит. В нём содержится код протокола транспортного уровня, для которого предназначена дейтаграмма. Для TCP --- 6.

10) /Контрольная сумма заголовка/. Длина 16 бит. Контрольная сумма вычисляется по всему заголовку и меняется в каждом узле, через которую она проходит. Она вычисляется путём сложения всех 16-разрядных слов заголовка и дополнением результата 1.

11) /IP-адрес отправителя/. 32 бита.

12) /IP-адрес получателя/. 32 бита.

13) /Опции/. Каждой опции отводится 1 байт. Каждый байт делится на 3 части.
    - 1 часть --- копия, занимает 1 бит (нужно ли копировать поле "опции" при фрагментации дейтаграмм).
    - 2 часть --- класс опции, занимает 2 бита (класс 00 --- управление сетью, класс 10 --- отладка сети).
    - 3 часть --- номер опции, 5 бит (00000 --- конец списка опций, 00011 --- совместная маршрутизация, где часть маршрута задаётся отправителем, остальные определяются шлюзами, 01001 --- маршрутизация отправителя, где все узлы задаются отправителем, 00111 --- обозначает запись маршрута, 00100 --- запись временных меток).

14) /Заполнитель/. Для дополнения заголовка до целого числа 32-разрядных слов. 

После формирования дейтаграммы конструируются заголовок. Для него вычисляется контрольная сумма. Определяется узел, в которую предполагается отправить дейтаграмму. Если получатель находится в той же сети, что и отравитель, этим следующим узлом будет получатель. Если нет, то следующим узлом будет шлюз. Если используется опция "запись маршрута", то добавляются адреса узлов нужного маршрута. Дейтаграмма передаётся через протоколы нижележащих уровней в сеть.

Каждый шлюз в сети, через который проходит дейтаграмма проверяет контрольную сумму. Если контрольные суммы не совпадают, дейтаграмма уничтожается, а отправителю передаётся сообщение об ошибке. Если совпадают, уменьшается значение поля "время жизни", если это поле равно 0, то дейтаграмма уничтожается.

Определяется следующий узел маршрута, исходя из адреса получателя или опции маршрутизации. Заголовок перестраивается заново. Если при этом требуется фрагментация и соответствующий флаг не фрагментируется, дейтаграмма уничтожается и отправителю отправляется сообщение об ошибке.

При необходимости может быть записана временная метка. После того, как дейтаграмма достигла машины получателя, проверяется контрольная сумма заголовка. Получатель ждёт сборки в течение определённого времени. Если за это время сообщение не было собрано, то все его полученные фрагменты уничтожаются, отправителю отправляется сообщение об ошибке. Если всё нормально, IP заголовков уничтожаются, сообщение передаётся на более высокий уровень, если требуется, отправителю посылается ответ.

* Протокол ICMP (Internet control message protocol)
  CLOCK: [2010-09-22 Срд 10:04]--[2010-09-22 Срд 11:25] =>  1:21
Этот протокол сообщает отправителю об ошибках в сети. Используется совместно с IP. ICMP-дейтаграмма снабжена IP-заголовком, поэтому она в сети обрабатывается также, как обычная IP-дейтаграмма. В узлах сети ICMP-дейтаграммы обрабатываются на сетевом уровне.

Сообщения об ошибках передаются машине отправителя, а внутри ICMP-сообщение. Внутри этого ICMP-сообщения находятся IP-заголовок и первые 64 бита дейтаграммы, при передаче которой возникла ошибка.

Вид заголовка хранится в ICMP-заголовке. Заголовок состоит из 3 полей:
1) Тип сообщения.
   - 0 --- эхо-ответ;
   - 8 --- эхо-запрос;
   - 3 --- адресат недостижим. Это же сообщение генерируется, если шлюзу необходимо фрагментировать дейтаграмму, а в ней установлен флаг "не фрагментировать";
   - 4 --- снизить скорость передачи данных;
   - 5 --- переадресовать. Служебное сообщение для шлюзов при выполнении маршрутизации;
   - 11 --- время жизни дейтаграммы истекло;
   - 12 --- неправильный параметр. Возникает при обнаружении семантической или синтаксической ошибки в IP-заголовке;
   - 13 --- запрос временной метки;
   - 14 --- отклик на запрос временной метки. Они нужны для контроля прохождения дейтаграмм через узлы сети. При этом внутри ICMP-сообщения в запросе записывается вместо IP-заголовка исходная временная метка, а в отклике к этой метке добавляется метка получения запроса шлюза и метка отправки ответа шлюзу;
   - 17 --- запрос адресной маски;
   - 18 --- отклик на запрос адресной маски. Эти сообщения применяются для тестирования определённой подсети с заданной маски.
2) Код сообщения.
3) Контрольная сумма ICMP-заголовка. Вычисляется также, как контрольная сумма IP-заголовка.

* Протокол IP версии 6

Основное отличие от версии 4 заключается в использовании 128-битных IP-адресов. Кроме этого протокол предусматривает введение метки для контроля качества обслуживания и предотвращения фрагментации в промежуточных узлах. В этом протоколе предусматривается встроенное средство для аутентификации и шифрования данных.

Заголовок имеет длину 40 байт.
1) /Версия/. 4 бита.
2) /Приоритет/. Приоритет дейтаграммы. 4 бита.
3) /Метка потока/. Длина 24  бита. При помощи этого поля помечаются дейтаграммы, для которых в маршрутизаторах сети требуется специальная обработка.
4) /Длина всей IP-дейтаграммы минус длина заголовка/. 16 бит.
5) /Следующий заголовок/. Его длина 8 бит. В нём определяется заголовок, который находится за заголовком IP. Следующим заголовком может быть заголовок транспортного уровня либо заголовок расширения IP.
6) /Предельное число транзитов/. Длина 8 бит.
7) /Адрес источника/. 128 бит.
8) /Адрес получателя/. 128 бит.

** Заголовки расширений IP

1) Заголовок параметров транзита. В нём содержится дополнительная информация для маршрутизаторов. Используется в настоящее время для передачи пакетов длиной до 4 ГБ.
2) Заголовок параметров адресата. В нём содержится информация, которую будет обрабатывать конечный получатель пакета.
3) Заголовок маршрутизации. Используется для маршрутизации. В нём содержится список узлов, через которые должна пройти IP-дейтаграмма. Он начинается: сначала указывается поле следующего заголовка, затем указывается длина заголовка маршрутизации, потом указывается тип маршрутизации, потом оставшиеся сегменты, т. е. оставшиеся узлы, через которые должна пройти дейтаграмма. После этого указывается сам маршрут.
4) Заголовок фрагментации. Используется при необходимости фрагментации дейтаграмм. Фрагментация может быть выполнена только отправителем. Заголовок состоит:
   - следующий заголовок;
   - смещение фрагмента. Длина 13 бит. Смещение измеряется в единицах, кратных 64 битам;
   - 2 бита не используются;
   - флаг "есть ещё фрагменты";
   - идентификатор дейтаграммы. Длина 32 бита.
5) Заголовок аутентификации.
6) Заголовок шифрования.

* Протокол IPsec

Протокол IPsec обеспечивает защиту обмена данными в сетях за счёт шифрования и (или) аутентификации всего потока данных на уровне IP.

Протокол может работать в двух режимах:
1) Транспортный. В этом режиме защищаются только данные из IP-дейтаграмм, а заголовок IP-дейтаграммы не защищается.
2) Туннельный. В этом режиме защищается вся IP-дейтаграмма. Для этого к защищённой IP-дейтаграмме добавляется новый IP-заголовок, никак не защищённый. Обычно в нём указывается IP-адрес маршрутизатора или шлюза, который стоит в сети конечного получателя.

IPsec поддерживает два протокола защиты:
1) Аутентификация AH.
2) Протокол шифрования аутентификации ESP.

Внутри каждого из этих протоколов может использоваться несколько различных алгоритмов.

Дополнительно в протоколе IPsec определён протокол распределения ключей.

Заголовок аутентификации обеспечивает аутентификацию IP-дейтаграмм и проверку целостности данных в нём.

Заголовок состоит из следующих полей:
1) Следующий заголовок. Длина 8 бит.
2) Длина. Здесь длина заголовка в 32-битных единицах минус 2.
3) Зарезервированных 16 бит.
4) Индекс параметров защиты. Длина 32 бита. Он идентифицирует защищённую связь.
5) Порядковый номер. Длина 32 бита. Порядковый номер дейтаграммы, который был послан по данной защищённой связи.
6) Данные аутентификации. В нём содержится код аутентификации.

** Защищённая связь

Связь --- односторонние отношения между отправителем и получателем.

Связь определяется 3 параметрами:
1) Индекс параметров защиты. Строка битов, которая обозначает некий условный номер этой связи. По нему определяются алгоритмы обработки принятого пакета.
2) IP-адрес получателя.
3) Идентификатор протокола защиты.

Параметры защищённой связи хранятся в специальных таблицах. В этих таблицах записаны:
- счётчик порядкового номера;
- флаг переполнения счётчика порядкового номера;
- окно защиты от воспроизведения. Для защиты от повторной передачи одних и тех же дейтаграмм.
* Дополнительная лекция

** IP адресация

IP адрес является уникальным 32-битным идентификатором IP интерфейса в сети Интернет, т. е. если у хоста несколько интерфейсов, у него будет несколько IP адресов.

IP адрес принято записывать в десятичном виде с разбивкой 32-битного числа по октетам. IP адрес состоит из 2 частей. Старшие разряды являются адресом сети, младшие разряды --- адресом хоста. Граница разделов 2 частей определяются маской (subnet mask).

/Маска/ --- 32-битовая комбинация, в которой единицы установлены на сетевой части адреса, а нули на хостовой.

** Классовая модель адресов

Существуют 5 классов адресов:
1) A. 255.0.0.0. Диапазон 0.0.0.0 - 127.0.0.0
2) B. 255.255.0.0. Диапазон 128.0.0.0 - 192.255.0.0
3) C. 255.255.255.0. Диапазон 193.0.0.0 - 223.255.255.255.0
4) D. Сеть мультиадресной рассылки. Адреса этого диапазона могут быть присвоены нескольким сетевым интерфейсам. Диапазон 224.0.0.0 - 239.0.0.0
5) E. Диапазон 240.0.0.0 - 255.255.255.255

** Специальные IP адреса

- 0.0.0.0 --- маршрут по умолчанию (default road). Используется в маршрутных таблицах для указания направления передачи пакетов, адресат которых неизвестен.
- 255.255.255.255 --- широковещательный адрес (broadcast) локальной сети, в которой абонент находится.
- адрес, у которого хостовая часть нулевая называется адресом сети и он не может быть присвоен никакому хосту.
- адрес, у которого хостовая часть единицы называется широковещательным адресом удалённой сети. Он не может быть присвоен хосту.
- 127.0.0.0 --- сеть обратной связи (loopback). В ней определён только один интерфейс --- 127.0.0.1. Любой пакет, отправленный по адресу 127.0.0.1 будет принят этим же узлом так, как если бы он пришёл из сети. Используется для отладки сетевых сервисов без подключения к реальной сети.

** Серые адреса

Любой пакет, отправленный по серому адресу будет отброшен маршрутизаторами сети Интернет и останется в пределах локальной сети. Поэтому адреса из серых диапазонов могут иметь несколько хостов в разных локальных сетях.

- A: 10.0.0.0
- B: 172.16.0.0 - 172.32.0.0
- C: 192.168.0.0 - 172.168.255.0

Для доступа с серого адреса к сети Интернет используется специальное устройство --- прокси сервер, которое реализует функции трансляции адресов NAT.

** Бесклассовая модель

1000000 128
1100000 192
1110000 224
1111000 240
1111100 248
1111110 254

Для получения адреса сети необходимо IP адрес узла в двоичном виде поразрядно умножить на маску. Для получения адреса хоста IP адрес в двоичном виде поразрядно необходимо умножить на инвертированную маску

Сеть 172.16.40.0/24
3 сети 20 хостов
172.16.40.000/00000
172.16.40.001/00000
172.16.40.010/00000

Диапазон
0: 172.16.40.000/00001 = 1
   172.16.40.000/11110 = 30
1: 172.16.40.001/00001 = 33
   172.16.40.001/11110 = 62
2: 172.16.40.010/00001 = 65
   172.16.40.010/11110 = 94

** Практика

65.179.19.241 
255.255.128.0 маска
Найти адрес сети, хоста, диапазон, широковещательный адрес сети.

Умножить 19 на 128 в двоичном виде поразрядно. 
Адрес сети: 65.179.0.0

128 инвертировать и умножить.
Адрес хоста: 0.0.19.241

Адрес сети: минимальный 65.179.00000000.0000001
максимальный 65.179.127.255

Широковещательный: 65.179.0.1

** Маршрутизация

|   Адрес пол. |      Маска пол. | Маршрутизатор |    Интерфейс | Метрика |
|--------------+-----------------+---------------+--------------+---------|
|  172.16.40.0 | 255.255.255.224 |   172.16.40.1 |  172.16.40.1 |       1 |
| 172.16.40.32 | 255.255.255.224 |  172.16.40.33 | 172.16.40.33 |       1 |
| 172.16.40.64 | 255.255.255.224 |  172.16.40.65 | 172.16.40.65 |       1 |
|      0.0.0.0 |         0.0.0.0 |   65.137.80.1 | 65.137.80.11 |       1 |


